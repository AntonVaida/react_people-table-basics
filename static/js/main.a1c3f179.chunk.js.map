{"version":3,"sources":["components/PeopleInfo.tsx","components/PeopleList.tsx","api.ts","components/Loader/Loader.tsx","components/People.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["PeopleInfo","person","selectPeople","className","classNames","slug","to","sex","name","born","died","mother","motherName","father","fatherName","PeopleList","list","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","People","useState","peopleList","setPeopleList","isLoading","setIsLoading","error","setError","useParams","useEffect","handleLoadingPeople","List","find","per","length","HomePage","NotFoundPage","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"ySAUaA,EAA6B,SAAC,GAGpC,IAFLC,EAEI,EAFJA,OACAC,EACI,EADJA,aAEA,OACE,qBACE,UAAQ,SACRC,UAAWC,IAAW,CACpB,yBAA0BF,IAAiBD,EAAOI,OAHtD,UAME,6BACE,cAAC,IAAD,CACEC,GAAE,kBAAaL,EAAOI,MACtBF,UAAWC,IAAW,CACpB,kBAAkC,MAAfH,EAAOM,MAH9B,SAMGN,EAAOO,SAIZ,6BAAKP,EAAOM,MACZ,6BAAKN,EAAOQ,OACZ,6BAAKR,EAAOS,OACXT,EAAOU,OACN,6BACE,cAAC,IAAD,CACEL,GAAE,kBAAaL,EAAOU,OAAON,MAC7BF,UAAU,kBAFZ,SAIGF,EAAOW,eAIZ,6BAAKX,EAAOW,WAAcX,EAAOW,WAAc,MAEhDX,EAAOY,OACN,6BACE,cAAC,IAAD,CACEP,GAAE,kBAAaL,EAAOY,OAAOR,MAD/B,SAGGJ,EAAOa,eAIZ,6BAAKb,EAAOa,WAAab,EAAOa,WAAa,QAIpD,ECnDYC,EAA6B,SAAC,GAGpC,IAFLC,EAEI,EAFJA,KACAd,EACI,EADJA,aAEA,OACE,gCACGc,EAAKC,KAAI,SAAAhB,GAAM,OACd,cAAC,EAAD,CACEA,OAAQA,EACRC,aAAcA,GAHF,KAQrB,ECdM,SAASgB,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKxB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECKTyB,EAAkB,WAC7B,MAAoCC,mBAAmB,IAAvD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAwBC,cAAhB/B,YAAR,MAAe,KAAf,EAyBA,OAvBAgC,qBAAU,WACR,IAAMC,EAAmB,iDAAG,gHAExBL,GAAa,GAFW,SAGDf,IAHC,OAGlBO,EAHkB,OAIlBc,EAAOd,EAASR,KAAI,SAAAhB,GAAM,kCAEzBA,GAFyB,IAG5BY,OAAQY,EAASe,MAAK,SAAAC,GAAG,OAAKA,EAAIjC,OAASP,EAAOa,UAAzB,IACzBH,OAAQc,EAASe,MAAK,SAAAC,GAAG,OAAKA,EAAIjC,OAASP,EAAOW,UAAzB,KAJG,IAQhCmB,EAAcQ,GACdN,GAAa,GAbW,kDAexBE,GAAS,GAfe,0DAAH,qDAmBzBG,GACD,GAAE,IAGD,sBAAMnC,UAAU,UAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SACG6B,EACC,cAAC,EAAD,IAEA,qCACGE,GACC,mBAAG,UAAQ,qBAAqB/B,UAAU,kBAA1C,mCAKA2B,EAAWY,QACX,mBAAG,UAAQ,kBAAX,+CAKF,wBACE,UAAQ,cACRvC,UAAU,yDAFZ,UAME,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,cAAC,EAAD,CACEa,KAAMc,EACN5B,aAAcG,kBAUjC,ECtFYsC,EAAoB,kBAC/B,sBAAMxC,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,0BAH2B,ECApByC,EAAwB,kBACnC,sBAAMzC,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,+BAH+B,ECOxB0C,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACR1C,UAAU,iCACV2C,KAAK,aACL,aAAW,kBAJb,SAME,qBAAK3C,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAG4C,EAAH,EAAGA,SAAH,OAAkB3C,IAAW,cAAe,CACrD,8BAA+B2C,GADtB,EAGXzC,GAAG,IAJL,kBASA,cAAC,IAAD,CACEH,UAAW,gBAAG4C,EAAH,EAAGA,SAAH,OAAkB3C,IAAW,cAAe,CACrD,8BAA+B2C,GADtB,EAGXzC,GAAG,UAJL,2BAWN,eAAC,IAAD,WACE,cAAC,IAAD,CACE0C,KAAK,IACLC,QAAU,cAAC,EAAD,MAEZ,cAAC,IAAD,CACED,KAAK,OACLC,QAAS,cAAC,IAAD,CAAU3C,GAAG,IAAI4C,SAAO,MAEnC,eAAC,IAAD,CAAOF,KAAK,SAAZ,UACE,cAAC,IAAD,CACEG,OAAK,EACLF,QAAU,cAAC,EAAD,MAEZ,cAAC,IAAD,CACED,KAAK,QACLC,QAAU,cAAC,EAAD,SAGd,cAAC,IAAD,CACED,KAAK,IACLC,QAAU,cAAC,EAAD,WAnDC,ECDnBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.a1c3f179.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  selectPeople: string | null\n};\n\nexport const PeopleInfo:React.FC<Props> = ({\n  person,\n  selectPeople,\n}) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': selectPeople === person.slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={classNames({\n            'has-text-danger': person.sex === 'f',\n          })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      {person.mother ? (\n        <td>\n          <Link\n            to={`/people/${person.mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {person.motherName}\n          </Link>\n        </td>\n      ) : (\n        <td>{person.motherName ? (person.motherName) : '-'}</td>\n      )}\n      {person.father ? (\n        <td>\n          <Link\n            to={`/people/${person.father.slug}`}\n          >\n            {person.fatherName}\n          </Link>\n        </td>\n      ) : (\n        <td>{person.fatherName ? person.fatherName : '-'}</td>\n      )}\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types';\nimport { PeopleInfo } from './PeopleInfo';\n\ntype Props = {\n  list: Person[],\n  selectPeople: string | null,\n};\n\nexport const PeopleList:React.FC<Props> = ({\n  list,\n  selectPeople,\n}) => {\n  return (\n    <tbody>\n      {list.map(person => (\n        <PeopleInfo\n          person={person}\n          selectPeople={selectPeople}\n        />\n      ))}\n    </tbody>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PeopleList } from './PeopleList';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\n\nexport const People:React.FC = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { slug = null } = useParams();\n\n  useEffect(() => {\n    const handleLoadingPeople = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getPeople();\n        const List = response.map(person => (\n          {\n            ...person,\n            father: response.find(per => (per.name === person.fatherName)),\n            mother: response.find(per => (per.name === person.motherName)),\n          }\n        ));\n\n        setPeopleList(List);\n        setIsLoading(false);\n      } catch {\n        setError(true);\n      }\n    };\n\n    handleLoadingPeople();\n  }, []);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <>\n                {error && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {!peopleList.length && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n                <table\n                  data-cy=\"peopleTable\"\n                  className=\"\n                  table is-striped is-hoverable is-narrow is-fullwidth\n                  \"\n                >\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Sex</th>\n                      <th>Born</th>\n                      <th>Died</th>\n                      <th>Mother</th>\n                      <th>Father</th>\n                    </tr>\n                  </thead>\n\n                  <PeopleList\n                    list={peopleList}\n                    selectPeople={slug}\n                  />\n                </table>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import React from 'react';\n\nexport const HomePage:React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </main>\n);\n","import React from 'react';\n\nexport const NotFoundPage:React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  </main>\n);\n","import {\n  Navigate, NavLink, Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { People } from './components/People';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n    <Routes>\n      <Route\n        path=\"/\"\n        element={(<HomePage />)}\n      />\n      <Route\n        path=\"home\"\n        element={<Navigate to=\"/\" replace />}\n      />\n      <Route path=\"people\">\n        <Route\n          index\n          element={(<People />)}\n        />\n        <Route\n          path=\":slug\"\n          element={(<People />)}\n        />\n      </Route>\n      <Route\n        path=\"*\"\n        element={(<NotFoundPage />)}\n      />\n    </Routes>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}